import React from 'react';
import Head from 'next/head';
import type { NextPage } from 'next';
import Particles from 'react-tsparticles';
import { loadFull } from 'tsparticles';
import { loadStarsPreset } from 'tsparticles-preset-stars';
import Image from 'next/image';
import styles from '../styles/Home.module.scss';
import Footer from '../components/Footer';
import NavBar, { CurrentPage } from '../components/NavBar';
import { Arma, MCBedrock, MCJava, Mumble, Rust, Teamspeak, Ventrilo } from '../public';

interface Data {
    feature: string;
    GN: string | number;
    PbHost: string | number;
    McPro: string | number;
}

const Home: NextPage = () => {
    const tableData = [
        {
            feature: 'Single Thread CPU Score',
            GN: 56562,
            PbHost: 7431,
            McPro: 1709,
        },
        {
            feature: 'Instant Setup',
            GN: 'Yes',
            PbHost: 'Yes',
            McPro: 'Yes',
        },
        {
            feature: 'DDoS Protection',
            GN: 'Yes',
            PbHost: 'Yes',
            McPro: 'Yes',
        },
        {
            feature: 'Jar Selector',
            GN: 'Yes',
            PbHost: 'Yes',
            McPro: 'Yes',
        },
        {
            feature: 'Modpack Installer',
            GN: 'Yes',
            PbHost: 'Yes',
            McPro: 'Yes',
        },
        {
            feature: 'Free Databases',
            GN: 'Yes',
            PbHost: 'Yes',
            McPro: 'Yes',
        },
        {
            feature: 'Firewall Manager',
            GN: 'Yes',
            PbHost: 'Yes',
            McPro: 'Yes',
        },
        {
            feature: 'Load Balancers',
            GN: 'Yes',
            PbHost: 'Maybe',
            McPro: 'No',
        },
        {
            feature: 'Custom Panel',
            GN: 'Yes',
            PbHost: 'Yes',
            McPro: 'Yes',
        },
        {
            feature: 'Instant Cancellation',
            GN: 'Yes',
            PbHost: 'No',
            McPro: 'Yes',
        },
    ];

    const dataColor = (data: Data) => {
        if (typeof data.GN === 'number' && typeof data.PbHost === 'number' && typeof data.McPro === 'number') {
            const biggest = Math.max(data.GN, data.McPro, data.PbHost);
            return {
                GN: data.GN === biggest ? '#26BA5B' : '#F12C2C',
                PbHost: data.PbHost === biggest ? '#26BA5B' : '#F12C2C',
                McPro: data.McPro === biggest ? '#26BA5B' : '#F12C2C',
            };
        }
        return {
            GN: data.GN === 'Yes' ? '#26BA5B' : data.GN === 'Maybe' ? '#ED8F38' : '#F12C2C',
            PbHost: data.PbHost === 'Yes' ? '#26BA5B' : data.PbHost === 'Maybe' ? '#ED8F38' : '#F12C2C',
            McPro: data.McPro === 'Yes' ? '#26BA5B' : data.McPro === 'Maybe' ? '#ED8F38' : '#F12C2C',
        };
    };

    return (
        <>
            <Head>
                <title>Galactic Nodes</title>
                <meta name={'description'} content={'Generated by create next app'} />
                <link rel={'icon'} href={'/favicon.ico'} />
            </Head>
            <main className={styles.main}>
                <div className={styles.mainSector}>
                    <Particles
                        style={{
                            position: 'absolute',
                            top: 0,
                            zIndex: 5,
                        }}
                        height={'1000px'}
                        width={'100%'}
                        options={{
                            preset: 'stars',
                            background: { color: 'transparent' },
                            particles: {
                                number: {
                                    value: 350,
                                },
                                move: {
                                    speed: 0.4,
                                },
                            },
                            fullScreen: false,
                        }}
                        init={async engine => {
                            await loadStarsPreset(engine);
                            await loadFull(engine);
                        }}
                    />
                    <NavBar currentPage={CurrentPage.Home} loggedIn={false} />
                    <section className={styles.section}>
                        <h1>Premium Hosting, Always.</h1>
                        <p>
                            Galactic Nodes is the place for all of your game server needs, whether it’s single servers or multi-game networks, our
                            services provide the best solutions. We offer high performance hosting solutions for games such as Minecraft, Garry’s Mod,
                            Rust, CS:GO and many more
                        </p>
                        <span />
                        <div className={styles.grid}>
                            <div>
                                <div>
                                    <h4>ssd storage</h4>
                                    <div>
                                        <h6>
                                            <span>203,600</span>
                                        </h6>
                                        <h6>GB STORED</h6>
                                    </div>
                                </div>
                                <h6>All of our game servers utilize SSDs to ensure you’re always up to speed.</h6>
                            </div>
                            <div>
                                <div>
                                    <h4>ddos protection</h4>
                                    <div>
                                        <h6>
                                            <span>600+</span>
                                        </h6>
                                        <h6>ATTACKS STOPPED</h6>
                                    </div>
                                </div>
                                <h6>All of our game servers utilize SSDs to ensure you’re always up to speed.</h6>
                            </div>
                            <div>
                                <div>
                                    <h4>instant setup</h4>
                                    <div>
                                        <h6>
                                            <span>250,000</span>
                                        </h6>
                                        <h6>SERVERS DEPLOYED</h6>
                                    </div>
                                </div>
                                <h6>All of our game servers utilize SSDs to ensure you’re always up to speed.</h6>
                            </div>
                            <div>
                                <h4>easy panel</h4>
                                <h6>All of our game servers utilize SSDs to ensure you’re always up to speed.</h6>
                            </div>
                            <div>
                                <h4>intuitive billing</h4>
                                <h6>All of our game servers utilize SSDs to ensure you’re always up to speed.</h6>
                            </div>
                            <div>
                                <h4>high availability</h4>
                                <h6>All of our game servers utilize SSDs to ensure you’re always up to speed.</h6>
                            </div>
                        </div>
                        <h2>Our Games</h2>
                    </section>
                </div>
                <div className={styles.games}>
                    <section>
                        <Image src={Arma} />
                        <Image src={MCBedrock} />
                        <Image src={MCJava} />
                        <Image src={Rust} />
                    </section>
                </div>
                <section className={styles.comparison}>
                    <h2>How do we compare?</h2>
                    <table cellSpacing={'0'}>
                        <thead>
                            <tr>
                                <th style={{ textAlign: 'left' }}>Features</th>
                                <th>Galactic Nodes</th>
                                <th>PebbleHost</th>
                                <th>MCProHosting</th>
                            </tr>
                        </thead>
                        <tbody>
                            {tableData.map(el => {
                                const idk = dataColor(el);
                                return (
                                    <tr>
                                        <td style={{ textAlign: 'left' }}>{el.feature}</td>
                                        <td style={{ color: idk.GN }}>{el.GN.toLocaleString('en', { useGrouping: true })}</td>
                                        <td style={{ color: idk.PbHost }}>{el.PbHost.toLocaleString('en', { useGrouping: true })}</td>
                                        <td style={{ color: idk.McPro }}>{el.McPro.toLocaleString('en', { useGrouping: true })}</td>
                                    </tr>
                                );
                            })}
                        </tbody>
                    </table>
                </section>
                <section className={styles.voip}>
                    <h2>VOIP Hosting Options</h2>
                    <div>
                        <div>
                            <Image src={Teamspeak} />
                        </div>
                        <div>
                            <Image src={Mumble} />
                        </div>
                        <div>
                            <Image src={Ventrilo} />
                        </div>
                    </div>
                </section>
            </main>
            <Footer />
        </>
    );
};

export default Home;
